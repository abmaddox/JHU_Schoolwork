package edu.jhuep.maddox.bhc.controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import edu.jhuep.maddox.bhc.constants.ParameterNames;
import edu.jhuep.maddox.bhc.model.bean.Fields;
import edu.jhuep.maddox.bhc.model.validation.Validator;

/**
 * This servlet catches GET and POST requests sent to /maddox_a_hw10/home
 */
@WebServlet("/index.html")
public class ControllerBHC extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	//reference name for the Fields bean
	public static final String BEAN = "stringbean";
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ControllerBHC() {
        super();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//General design from https://www.jhuep.com/~spiegel/en605681/Servlets_JSP/ServletsAndJSP.html
		response.setContentType("text/html;charset=UTF-8");
		HttpSession session = request.getSession();
		Fields f = (Fields) session.getAttribute(BEAN);
		
		if (f == null) {
			//instatiate a new fields object, default values are set to be functional for the base page
			f = new Fields();
			session.setAttribute(BEAN, f);
			RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/home.jsp");
	        dispatcher.forward(request, response);
		}
		else {
			String hike = request.getParameter(ParameterNames.HIKE.toString());
			String date = request.getParameter(ParameterNames.DATE.toString());
			String duration = request.getParameter(ParameterNames.DURATION.toString());
			String hikers = request.getParameter(ParameterNames.HIKERS.toString());
			
			//do validation, get rate, get errors
			Validator v = new Validator(hike, date, duration, hikers);
			
			//set values for the ole bean. Do some null checks for safetys
			f.setHike(hike != null ? hike : "None");
			f.setDate(date != null ? date : "");
			f.setDuration(duration != null ? duration : "");
			f.setHikers(hikers  != null ? hikers : "");
			
			//no null check on rate because it is generated by the Validator object.
			//it either has a value or is an empty string
			f.setRate(v.getRate());
			
			//this is always a list of at least length 1 after validation.
			//errors is only null in a newly instantiated Fields bean
			f.setErrors(v.getErrors());
			
			RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/home.jsp");
	        dispatcher.forward(request, response);
		}
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
